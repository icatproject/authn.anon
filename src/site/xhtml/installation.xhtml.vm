<html>
<head>
<title>installation</title>
</head>
<body>

	<h1>Installation</h1>

	<h2>Compatibility</h2>
	This authentication plugin will work with an ICAT version of 4.9.0 or
	greater.

	<h2>Prerequisites</h2>
	<ul>
		<li>The authn.anon distribution: <a
			href="${repoUrl}/org/icatproject/authn.anon/${project.version}/authn.anon-${project.version}-distro.zip">authn_anon-${project.version}-distro.zip</a>
		</li>
		<li>A suitable deployed application server that supports JakartaEE 10+. Testing has been carried out with Payara Server Community 6. Other applications servers such as GlassFish and WildFly may work but have not been tested.
			<a href="http://icatproject.org/installation/glassfish/">Payara/Glassfish installation instructions</a> are available.
		</li>
		<li>Python 3.6+ installed on the server.</li>
	</ul>

	<h2>Summary of steps</h2>
	<ol>
		<li>Please follow <a
			href="http://icatproject.org/installation/component/"> the
				generic installation instructions</a>
		</li>
		<li>If you are introducing the anon authenticator then update the
			run.properties file for icat.server to see the authenticator and
			restart icat to see the change. The easiest way is to rerun the setup
			script for the icat.server. <em>Remember that restful
				authenticators are identified by url rather than jndi.</em>
		</li>

		<li>Check that it works.</li>
	</ol>

	<h2>The setup.properties file</h2>
	<dl>
		<dt>container</dt>
		<dd>
			Values must be chosen from: <a target="_blank"
				href="http://www.eclipse.org/eclipselink/api/2.6/org/eclipse/persistence/config/TargetServer.html">TargetServer</a>
			Though only Glassfish is working properly at the moment.
		</dd>
		<dt>home</dt>
		<dd>is the top level of the container installation. For Glassfish
			it must contain "glassfish/domains" and for JBoss (wildfly) it must
			contain jboss-modules.jar.</dd>
		<dt>port</dt>
		<dd>is the administration port of the container which is
			typically 4848 for Glassfish and 9990 for JBoss.</dd>
		<dt>secure</dt>
		<dd>must be set to true or false. If true then only https and not
			http connections will be allowed.</dd>
	</dl>

	<h2>The logback.xml file</h2>
	<p>If you wish to modify the provided logging levels then rename
		logback.xml.example to logback.xml and edit it to suit your needs.</p>

	<h2>The run.properties file</h2>

	<dl>
		<dt>ip</dt>
		<dd>If access to the ANON authentication should only be allowed
			from certain IP addresses then provide a space separated list of
			allowed values. These take the form of an IPV4 or IPV6 address
			followed by the number of bits (starting from the most significant)
			to consider.</dd>

		<dt>mechanism</dt>
		<dd>if specified is a label to appear before the user name as it
			is made available to ICAT for authorization. For example if this is
			set to 'anon' then any user will be provided to ICAT as 'anon/anon',
			but if no mechanism is specified it will be provided simply as
			'anon'.</dd>
	</dl>

	<h2>Update the icat.properties file for your ICAT</h2>
	<p>This is required for icat to see the new authenticator if this
		is the first time that a RestFul (2.0.0 and greater) ANON
		authenticator has been used by the icat.server.</p>
	<p>
		Go to the installation directory for icat.server then edit the
		run.properties to refer to the new authenticator and type:
		<kbd> ./setup install </kbd>
	</p>

	<h2>Check that authn.anon works</h2>
	<p>Use testicat (which is installed with ICAT). It should report
		that it logs in but may or may not have the permission to run the rest
		of the test. If it does not report that it has logged in then please
		check the server.log and the authn_anon.log files which can both be
		found in the logs directory.</p>

	A simple standalone test is to run:
	<blockquote>
		<code>curl -k https://localhost:8181/authn.anon/description -w
			"\n"</code>
		which returns a description, <br />
		<code>curl -k https://localhost:8181/authn.anon/version -w "\n"</code>
		which returns the version and<br />
		<code>curl -k https://localhost:8181/authn.anon/authenticate -w
			"\n" -d 'json={"credentials":[]}'</code>
		to authenticate.
	</blockquote>

</body>
</html>
